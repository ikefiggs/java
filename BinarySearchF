\\ f

import java.security.SecureRandom;
import java.util.Arrays;
import java.util.Scanner;

public class BinarySearchTest {	
	public static int binarySearch(int[] data, int key) {
		int low = 0;
		int high = data.length - 1;
		int middle = (low + high +1) / 2;
		int location = -1;
		
		do {
			
			if (key == data[middle]) {
				location = middle;				
			}
			else if (key < data[middle]) {
				high = middle -1;
			}
			else {				
				low = middle + 1;				
			}
			
			middle = (low + high + 1) / 2;
		} while ((low <= high) && (location == -1));
		
		return location;
		
	}
	
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		SecureRandom generator = new SecureRandom();
		
		int[] data = generator.ints(20, 0, 101).toArray();
		System.out.print("Unsorted Array: \n");
		System.out.printf("%s%n%n", Arrays.toString(data));
		
		Arrays.sort(data);
		System.out.print("Sorted Array: \n");
		System.out.printf("%s%n%n", Arrays.toString(data));
		
		System.out.print("Please enter an integer value to search(-1 to quit:) ");
		int searchInt = input.nextInt();
		
		while (searchInt != -1) {
			int location = binarySearch(data, searchInt); // calling search
			
			if (location == -1) {
				System.out.printf("%d was not found in the array %n%n", searchInt);
				
			}
			else {
				System.out.printf("%d was found in the array at position %d%n%n", searchInt, location);
				
			}
			
			System.out.print("Please enter an integer value to search (-1 to quit): ");
			searchInt = input.nextInt();
			
		}		
	}	
}
